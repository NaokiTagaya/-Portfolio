version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.7.0-node-browsers
      environment:
        - BUNDLER_VERSION: 2.0.2
        - RAILS_ENV: test
    - image: circleci/mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        - MYSQL_ROOT_HOST: '%'
        - MYSQL_DB: portfolioec_test
        - MYSQL_USER: user
    working_directory: ~/portfolioec

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.0.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Use specific database.yml
          command: mv ./config/database.yml.ci ./config/database.yml

      - run:
          name: Databasesetup
          command: |
            bin/rails db:create
            bin/rails db:migrate

      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - d6:fd:52:0c:c5:67:8a:c9:25:2a:67:03:51:0a:09:d5
      - run: ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "/home/ec2-user/portfolioec/deploy-me.sh"

workflows:
    version: 2
    deploy:
      jobs:
        - build
        - deploy:
            filters:
              branches:
                only: master
